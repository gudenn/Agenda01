
import Interfaces.ListarContactosNombres;
import Clases.Evento;
import Conexion.Operaciones;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
/*
 * EditarVentanaEvento.java
 *
 * Created on 13-jun-2013, 15:03:58
 * @author juanki
 */
public class EditarVentanaEvento extends javax.swing.JDialog {

    /**
     * Creates new form EditarVentanaEvento
     */
    private java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("dd/MM/yyyy");
    SimpleDateFormat formatoDeFecha = new SimpleDateFormat("dd/MM/yyyy");
    JLabel texto_nombre = new JLabel();
    JLabel texto_fecha = new JLabel();
    JLabel texto_hora_ini = new JLabel();
    JLabel texto_hora_fin = new JLabel();
    private JScrollPane panel_tabla = new JScrollPane();
    private Evento evet;
    private JScrollPane scrollPane;
    private JTable tabla_contactos;

    public EditarVentanaEvento(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init_componentes();
    }

    public void init_componentes() {
        Font font = new Font("Courier", Font.BOLD, 15);
        texto_nombre.setFont(font);
        texto_fecha.setFont(font);
        texto_hora_fin.setFont(font);
        texto_hora_ini.setFont(font);
        tabla_Personas.setLayout(null);
        nota.setLayout(null);
        setLayout(null);
        hora_fin.addItem("--");
        for (int h = 0; h < 24; h++) {
            hora_fin.addItem(h);
            hora_ini.addItem(h);
        }

        minuto_fin.addItem("--");
        for (int m = 0; m < 60; m++) {
            minuto_fin.addItem(m);
            minuto_ini.addItem(m);
        }



    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void set_evento(Evento evento) {
        evet = evento;

        inicializar_textos_labels();

        texto_nombre.setText(evento.getNombre());
        texto_fecha.setText(evento.getFecha());
        texto_hora_ini.setText(evento.getHora_Ini() + " : " + evento.getMinuto_ini());
        texto_hora_fin.setText(evento.getHora_Fin() + " : " + evento.getMinuto_Fin());
        nota.setText(evento.get_nota());
        nota.enable(false);
        nombre.setText(evento.getNombre());
        try {
            fecha.setDate(formatoDeFecha.parse(evento.getFecha()));
        } catch (ParseException ex) {
            ex.printStackTrace();
        }

        hora_ini.setSize(50, 20);
        hora_fin.setSize(50, 20);
        minuto_fin.setSize(50, 20);
        minuto_ini.setSize(50, 20);

        hora_ini.setSelectedItem(Integer.parseInt(evento.getHora_Ini()));
        minuto_ini.setSelectedItem(Integer.parseInt(evento.getMinuto_ini()));
        hora_fin.setSelectedItem(evento.getHora_Fin());
        minuto_fin.setSelectedItem(evento.getMinuto_Fin());

        tabla_Personas.setModel(evento.get_contactos().getModel());
        tabla_Personas.setEnabled(false);
        nombre.setVisible(false);

        fecha.setVisible(false);
        hora_fin.setVisible(false);
        hora_ini.setVisible(false);
        minuto_ini.setVisible(false);
        minuto_fin.setVisible(false);
        l_dos_puntos.setVisible(false);
        l_dos_puntos1.setVisible(false);

    }

    public void inicializar_textos_labels() {
        texto_nombre.setBounds(100, 25, 100, 30);
        texto_fecha.setBounds(100, 65, 100, 30);
        texto_hora_ini.setBounds(130, 92, 100, 30);
        texto_hora_fin.setBounds(130, 124, 100, 30);


        add(texto_hora_ini);
        add(texto_hora_fin);
        add(texto_fecha);
        add(texto_nombre);

    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        l_nombre = new javax.swing.JLabel();
        l_fecha = new javax.swing.JLabel();
        l_hora = new javax.swing.JLabel();
        l_contactos = new javax.swing.JLabel();
        nombre = new javax.swing.JTextField();
        fecha = new com.toedter.calendar.JDateChooser();
        l_dos_puntos = new javax.swing.JLabel();
        hora_ini = new javax.swing.JComboBox();
        minuto_ini = new javax.swing.JComboBox();
        hora_fin = new javax.swing.JComboBox();
        minuto_fin = new javax.swing.JComboBox();
        l_dos_puntos1 = new javax.swing.JLabel();
        l_DE = new javax.swing.JLabel();
        l_A = new javax.swing.JLabel();
        editar = new javax.swing.JButton();
        cancelar = new javax.swing.JButton();
        aceptar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_Personas = new javax.swing.JTable();
        l_nota = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        nota = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        l_nombre.setText("Nombre :");

        l_fecha.setText("Fecha :");

        l_hora.setText("Hora :");

        l_contactos.setText("Contactos :");

        nombre.setText("jTextField1");

        l_dos_puntos.setText(":");

        l_dos_puntos1.setText(":");

        l_DE.setText("De");

        l_A.setText("A");

        editar.setText("Editar");
        editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarActionPerformed(evt);
            }
        });

        cancelar.setText("Cancelar");
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });

        aceptar.setText("Aceptar");
        aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptarActionPerformed(evt);
            }
        });

        tabla_Personas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tabla_Personas);

        l_nota.setText("Notas :");

        nota.setColumns(20);
        nota.setRows(5);
        jScrollPane2.setViewportView(nota);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(l_fecha)
                            .addComponent(l_nombre))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nombre)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(fecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addComponent(hora_fin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(l_dos_puntos1, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(minuto_fin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(hora_ini, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(l_dos_puntos, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(minuto_ini, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(l_A)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(l_hora)
                                .addGap(28, 28, 28)
                                .addComponent(l_DE)))
                        .addGap(21, 21, 21)))
                .addGap(138, 138, 138))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(l_contactos))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(l_nota))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(editar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(aceptar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cancelar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l_nombre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l_fecha))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l_dos_puntos)
                    .addComponent(minuto_ini, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hora_ini, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l_hora)
                    .addComponent(l_DE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(minuto_fin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hora_fin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l_dos_puntos1)
                    .addComponent(l_A))
                .addGap(18, 18, 18)
                .addComponent(l_nota)
                .addGap(21, 21, 21)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(l_contactos)
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editar)
                    .addComponent(aceptar)
                    .addComponent(cancelar))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarActionPerformed
        texto_fecha.setVisible(false);
        texto_hora_fin.setVisible(false);
        texto_hora_ini.setVisible(false);
        texto_nombre.setVisible(false);
        nombre.setVisible(true);
        fecha.setVisible(true);
        hora_ini.setVisible(true);
        hora_fin.setVisible(true);
        minuto_fin.setVisible(true);
        minuto_ini.setVisible(true);
        l_dos_puntos.setVisible(true);
        l_dos_puntos1.setVisible(true);
        l_A.setVisible(true);
        l_DE.setVisible(true);
        l_contactos.setVisible(true);
        l_fecha.setVisible(true);
        tabla_Personas.setEnabled(true);
        tabla_Personas.setVisible(false);
        jScrollPane1.setVisible(false);
        nota.enable(true);
        editar_tabla();
    }//GEN-LAST:event_editarActionPerformed
    public void editar_tabla() {
        ListarContactosNombres listar = new ListarContactosNombres(null, rootPaneCheckingEnabled);
        tabla_contactos = listar.get_tabla();
        scrollPane = new JScrollPane(tabla_contactos);
        panel_tabla = listar.get_panel_tabla();
        scrollPane.setBounds(80, 325, 200, 150);
        //panel_tabla.setLayout(null);
        add(scrollPane);
    }
    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        dispose();
    }//GEN-LAST:event_cancelarActionPerformed

    private void aceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptarActionPerformed

        validar_y_guardar();
        dispose();
    }//GEN-LAST:event_aceptarActionPerformed
    public void validar_y_guardar() {

        System.out.println(fecha.isValidateRoot());
        if (nombre.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(this, "El nombre del evento esta vacio");
        } else {
            if (((hora_fin.getSelectedItem().equals("--")))) {
                String hrs_ini = "" + hora_ini.getSelectedItem() + ":" 
                                    + minuto_ini.getSelectedItem();
                String hrs_fin = "" + hora_fin.getSelectedItem() + ":" 
                                    + minuto_fin.getSelectedItem();
                String note = nota.getText();
                try {
                    String date = sdf.format(fecha.getDate());
                    System.out.println(date + " " + hrs_ini + " " + hrs_fin);
                    Operaciones o = new Operaciones();
                    o.borrarEvento(evet.get_id());
                    o.insertarDatos(nombre.getText(), date, hrs_ini, hrs_fin,
                                    note, tabla_contactos);
                    dispose();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "la fecha no es valida");

                }
            } else {
                if (((int) hora_ini.getSelectedItem()) > ((int) hora_fin.getSelectedItem())) {
                    JOptionPane.showMessageDialog(this, 
                                "la hora de finalizacion del evento es "
                                + "menor que la hora de inicio");
                } else {

                    String hrs_ini = "" + hora_ini.getSelectedItem() + ":" 
                                        + minuto_ini.getSelectedItem();
                    String hrs_fin = "" + hora_fin.getSelectedItem() + ":" 
                                        + minuto_fin.getSelectedItem();
                    String note = nota.getText();

                    try {
                        String date = sdf.format(fecha.getDate());
                        System.out.println(date + " " + hrs_ini + " " + hrs_fin);
                        Operaciones o = new Operaciones();
                        o.borrarEvento(evet.get_id());
                        o.insertarDatos(nombre.getText(), date, hrs_ini, hrs_fin, 
                                        note, tabla_contactos);
                        dispose();
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, "la fecha no es valida");

                    }
                }
            }
        }
    }
    /**
     * @param args the command line arguments
     */
    /*public static void main(String args[]) {
     java.awt.EventQueue.invokeLater(new Runnable() {

     public void run() {
     EditarVentanaEvento dialog = new EditarVentanaEvento(new javax.swing.JFrame(), true);
     dialog.addWindowListener(new java.awt.event.WindowAdapter() {

     public void windowClosing(java.awt.event.WindowEvent e) {
     System.exit(0);
     }
     });
     dialog.setVisible(true);
     }
     });
     }*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aceptar;
    private javax.swing.JButton cancelar;
    private javax.swing.JButton editar;
    private com.toedter.calendar.JDateChooser fecha;
    private javax.swing.JComboBox hora_fin;
    private javax.swing.JComboBox hora_ini;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel l_A;
    private javax.swing.JLabel l_DE;
    private javax.swing.JLabel l_contactos;
    private javax.swing.JLabel l_dos_puntos;
    private javax.swing.JLabel l_dos_puntos1;
    private javax.swing.JLabel l_fecha;
    private javax.swing.JLabel l_hora;
    private javax.swing.JLabel l_nombre;
    private javax.swing.JLabel l_nota;
    private javax.swing.JComboBox minuto_fin;
    private javax.swing.JComboBox minuto_ini;
    private javax.swing.JTextField nombre;
    private javax.swing.JTextArea nota;
    private javax.swing.JTable tabla_Personas;
    // End of variables declaration//GEN-END:variables
}
